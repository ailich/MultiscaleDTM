[{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"multiscaledtm","dir":"Articles","previous_headings":"","what":"MultiscaleDTM","title":"README","text":"Please cite Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"purpose","dir":"Articles","previous_headings":"MultiscaleDTM","what":"Purpose","title":"README","text":"R package calculates multi-scale geomorphometric terrain attributes regularly gridded digital terrain models (DTM; .e. elevation bathymetry rasters) via specified window described Ilich et al. (2023).  Figure adapted Wilson et al. (2007)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"install-and-load-package","dir":"Articles","previous_headings":"MultiscaleDTM","what":"Install and Load Package","title":"README","text":"package can installed CRAN using install.packages(\"MultiscaleDTM\") development version can installed github using code remotes::install_github(\"ailich/MultiscaleDTM\"). using Windows, may need install Rtools using instructions found ). install github must already remotes package installed, can installed using install.packages(\"remotes\") package relies terra package handling spatial raster data.","code":""},{"path":[]},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"slope-aspect-and-curvature","dir":"Articles","previous_headings":"MultiscaleDTM > Main Functions","what":"Slope, Aspect and Curvature","title":"README","text":"SlpAsp - Calculates multi-scale slope aspect using modified version algorithm Misiuk et al (2021) extends classical formulations slope restricted 3x3 window (Fleming Hoffer, 1979; Horn et al., 1981; Ritter, 1987). algorithm considers subset cells within focal window, specifically four cells edge focal window directly , , left, right focal cell “rook” method, additional four corner cells “queen” method, edge cells “boundary” method.  DirSlp - Calculates multi-scale slope specified direction. Qfit - Calculates slope, aspect, curvature, morphometric features fitting quadratic surface focal window using ordinary least squares using equation shown -f regression parameters, Z elevation/depth, X east/west coordinates focal window relative focal cell, Y north/south coordinates focal window relative focal cell (Evans, 1980; Wilson et al., 2007; Wood, 1996). morphometric features algorithm modified use robust measures curvature based suggestions Minár et al. (2020). Z=aX2+bY2+cXY+dX+eY+f Z = aX^2 + ^2 +cXY+ dX +eY +f  Figure adapted Walbridge et al., (2018) Pfit - Calculates multiscale slope aspect aspect fitting planar surface focal window using ordinary least squares. provide equivalent results using quadratic fit (Jones, 1998) less computationally expensive.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"roughness","dir":"Articles","previous_headings":"MultiscaleDTM > Main Functions","what":"Roughness","title":"README","text":"VRM - Vector ruggedness measure (Sappington et al. 2007) quantifies roughness measuring dispersion vectors normal terrain surface. accomplished calculating local (3 x 3 cell) slope aspect, constructing unit vectors normal cell DTM. unit vectors decomposed corresponding x, y, z components (.e. x, y, z coordinates head vector relative origin) used following equation (note: N number cells window). VRM ranges zero one, representing completely smooth rough surfaces, respectively.  Figure adapted Sappington et al. (2007)  Figure adapted Habib (2021) VRM=1−(∑x)2+(∑y)2+(∑z)2N \\text{VRM} = 1- \\frac{\\sqrt{\\bigg(\\sum x\\bigg)^2+\\bigg(\\sum y\\bigg)^2+\\bigg(\\sum z\\bigg)^2}}{N} x=sin(slope)*sin(aspect) x = sin(\\text{slope})*sin(\\text{aspect}) y=sin(slope)*cos(aspect) y=sin(\\text{slope})*cos(\\text{aspect}) z=cos(slope) z=cos(\\text{slope}) SAPA - Calculates Surface Area Planar Area (Jenness, 2004). Rougher surfaces greater surface area planar area ratio, perfectly smooth surfaces value 1. 3D analog classical “chain--tape” method, calculates roughness ratio contoured distance (chain length) linear distance (tape measure distance; Risk, 1972). Additionally, planar area can corrected slope dividing product x y resolution cosine slope (Du Preez 2015). metric Jenness (2004) De Preez (2015) works per cell level (1x1 cell). function generalizes method multiple scales summing surface areas within focal window adjusting planar area focal window using multi-scale slope (Ilich et al., 2023). SurfaceArea - Calculate surface area grid cell (Jenness, 2004). accomplished connecting focal cell immediate neighbors create 8 large triangles. large triangles trimmed back extent focal cell using principle similar triangles, area 8 smaller triangles calculated summed estimate surface area focal pixel. used within SAPA.  Figure adapted Friedman et al. (2012) created BioRender.com.  Figure adapted Jenness (2004) AdjSD- roughness metric modifies standard deviation elevation/bathymetry account slope (Ilich et al., 2023). first fitting plane data focal window using ordinary least squares, extracting residuals, calculating standard deviation residuals within focal window.  RIE - Calculates Roughness Index-Elevation quantifies standard deviation residual topography (Cavalli et al., 2008). measure conceptually similar AdjSD rather fitting plane extracting residuals entire focal window, residual topography calculated focal pixel minus focal mean. local standard deviation calculated residual topography using focal filter.  Figure adapted Cavalli et al. (2008)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"relative-position","dir":"Articles","previous_headings":"MultiscaleDTM > Main Functions","what":"Relative Position","title":"README","text":"Relative position represents whether area local high low relation reference height. calculated value focal cell minus value reference elevation often mean included values focal window also functions median, min, max included values. Positive values indicate local topographic highs negative values indicate lows.Relative Position can expressed units input DTM raster can standardized relative local topography dividing standard deviation range included elevation values focal window. RelPos - flexible general purpose function calculate relative position using rectangular, circular, annulus, custom shaped focal window various functions included values reference height relative position functions calls RelPos different default parameter values. TPI - Topographic Position Index (Weiss, 2001) difference value focal cell mean surrounding cells (.e. central cell excluded focal opertaions) within rectangular circular focal window. DMV - Difference Mean Value (Lecours et al., 2017; Wilson, Gallant, 2000) difference value focal cell mean cells (.e. including focal cell) rectangular circular focal window. BPI - Bathymetric Position Index (Lundblad et al., 2006) difference value focal cell mean surrounding cells contained within annulus shaped window. Since annulus shaped window used, requires inner outer radius specified. Although name contains “bathymetric,” due context proposed, equally applicable terrestrial elevation data.  Examples different focal window shapes. Shown 13 x 13 cell rectangular window (left), circular window radius six cells (center), annulus window inner radius four cells outer radius six cells (right).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"tutorial","dir":"Articles","previous_headings":"MultiscaleDTM","what":"Tutorial","title":"README","text":"tutorial calculate terrain attributes using 5 x 5 cell rectangular window; however, rectangular odd numbered window size used. Window size specified using w parameter. Rectangular window sizes specified vector length 2 c(n_rows, n_cols). single number provided used number rows columns. Functions calculate relative position currently support focal window shapes. examples, additionally calculate measures using circular focal window radius 2 cells, annulus window inner radius 4 outer radius 6 cells, custom focal window. Circular windows specified single number representing radius, annulus windows specified vector length 2 c(inner_radius, outer_radius), custom windows specified matrix values showing data include (1’s) data exclude (NA’s). Load packages See package help page Read Data Typically raster data loaded R via terra package’s rast function. use instead load georeferenced version R’s built volcano data set using erupt function.","code":"library(MultiscaleDTM) #Load MultiscaleDTM package help(package=\"MultiscaleDTM\") r<- erupt()"},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"slope-aspect-and-curvature-1","dir":"Articles","previous_headings":"MultiscaleDTM > Tutorial","what":"Slope, Aspect, and Curvature","title":"README","text":"explore measures interactive environment use explore_terrain() go website","code":"slp_asp<- SlpAsp(r = r, w = c(5,5), unit = \"degrees\", method = \"queen\", metrics = c(\"slope\", \"aspect\", \"eastness\", \"northness\"), na.rm=TRUE) qmetrics<- Qfit(r, w = c(5,5), unit = \"degrees\", metrics = c(\"elev\", \"qslope\", \"qaspect\", \"qeastness\", \"qnorthness\", \"profc\", \"planc\", \"twistc\", \"meanc\", \"maxc\", \"minc\", \"features\"), na.rm = TRUE)"},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"roughness-1","dir":"Articles","previous_headings":"MultiscaleDTM > Tutorial","what":"Roughness","title":"README","text":"","code":"vrm<- VRM(r, w=c(5,5), na.rm = TRUE) sapa<- SAPA(r, w=c(5,5), slope_correction = TRUE, na.rm=TRUE) adj_SD<- AdjSD(r, w=c(5,5), na.rm = TRUE) rie<- RIE(r, w=c(5,5), na.rm = TRUE)"},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"relative-position-1","dir":"Articles","previous_headings":"MultiscaleDTM > Tutorial","what":"Relative Position","title":"README","text":"Note, “s” start names indicates attribute standardized based local topography.     Circle annulus windows can specified either cell units (number raster cells) map units (e.g. meters) can useful x y resolutions equal. Additionally, function circle_window annulus_window can used verify specifying window correctly (NA’s excluded cells 1’s included cells) can directly supplied w argument instead.","code":"rp<- RelPos(r, w=matrix(data = c(1,NA,1), nrow = 3, ncol=3), shape = \"custom\", fun = \"median\", na.rm = TRUE) tpi<- TPI(r, w=c(5,5), shape= \"rectangle\", na.rm = TRUE) dmv<- DMV(r, w=2, shape= \"circle\", na.rm = TRUE, stand=\"range\") bpi<- BPI(r, w = c(4,6), unit = \"cell\", stand= \"sd\", na.rm = TRUE) annulus_window(radius = c(4,6), unit = \"cell\") #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]   NA   NA   NA   NA   NA   NA    1   NA   NA    NA    NA    NA    NA #>  [2,]   NA   NA   NA    1    1    1    1    1    1     1    NA    NA    NA #>  [3,]   NA   NA    1    1    1    1    1    1    1     1     1    NA    NA #>  [4,]   NA    1    1    1   NA   NA   NA   NA   NA     1     1     1    NA #>  [5,]   NA    1    1   NA   NA   NA   NA   NA   NA    NA     1     1    NA #>  [6,]   NA    1    1   NA   NA   NA   NA   NA   NA    NA     1     1    NA #>  [7,]    1    1    1   NA   NA   NA   NA   NA   NA    NA     1     1     1 #>  [8,]   NA    1    1   NA   NA   NA   NA   NA   NA    NA     1     1    NA #>  [9,]   NA    1    1   NA   NA   NA   NA   NA   NA    NA     1     1    NA #> [10,]   NA    1    1    1   NA   NA   NA   NA   NA     1     1     1    NA #> [11,]   NA   NA    1    1    1    1    1    1    1     1     1    NA    NA #> [12,]   NA   NA   NA    1    1    1    1    1    1     1    NA    NA    NA #> [13,]   NA   NA   NA   NA   NA   NA    1   NA   NA    NA    NA    NA    NA #> attr(,\"unit\") #> [1] \"cell\" #> attr(,\"scale\") #> [1] \"4x6\" #> attr(,\"shape\") #> [1] \"annulus\" bpi2<- BPI(r, w = annulus_window(radius = c(4,6), unit = \"cell\"), stand= \"sd\", na.rm = TRUE) # equivalent to BPI code from earlier"},{"path":"https://ailich.github.io/MultiscaleDTM/articles/README.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"README","text":"Cavalli, M., Tarolli, P., Marchi, L., Dalla Fontana, G., 2008. effectiveness airborne LiDAR data recognition channel-bed morphology. CATENA 73, 249–260. https://doi.org/10.1016/j.catena.2007.11.001 Du Preez, C., 2015. new arc–chord ratio (ACR) rugosity index quantifying three-dimensional landscape structural complexity. Landscape Ecol 30, 181–192. https://doi.org/10.1007/s10980-014-0118-8 Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Fleming, M.D., Hoffer, R.M., 1979. Machine processing landsat MSS data DMA topographic data forest cover type mapping (. LARS Technical Report 062879). Laboratory Applications Remote Sensing, Purdue University, West Lafayette, Indiana. Friedman, ., Pizarro, O., Williams, S.B., Johnson-Roberson, M., 2012. Multi-Scale Measures Rugosity, Slope Aspect Benthic Stereo Image Reconstructions. PLOS ONE 7, e50440. https://doi.org/10.1371/journal.pone.0050440 Habib, M., 2021. Quantifying Topographic Ruggedness Using Principal Component Analysis. Advances Civil Engineering 2021, e3311912. https://doi.org/10.1155/2021/3311912 Horn, B.K., 1981. Hill Shading Reflectance Map. Proceedings IEEE 69, 14–47. Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067 Jenness, J.S., 2004. Calculating landscape surface area digital elevation models. Wildlife Society Bulletin 32, 829–839. https://doi.org/10.2193/0091-7648(2004)032[0829:CLSAFD]2.0.CO;2 Jones, K. H. (1998). comparison algorithms used compute hill slope property DEM. Computers & Geosciences, 24(4), 315–323. https://doi.org/10.1016/S0098-3004(98)00032-6 Lecours, V., Devillers, R., Simms, .E., Lucieer, V.L., Brown, C.J., 2017. Towards Framework Terrain Attribute Selection Environmental Studies. Environmental Modelling & Software 89, 19–30. https://doi.org/10.1016/j.envsoft.2016.11.027 Lundblad, E.R., Wright, D.J., Miller, J., Larkin, E.M., Rinehart, R., Naar, D.F., Donahue, B.T., Anderson, S.M., Battista, T., 2006. benthic terrain classification scheme American Samoa. Marine Geodesy 29, 89–111. https://doi.org/10.1080/01490410600738021 Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414 Misiuk, B., Lecours, V., Dolan, M.F.J., Robert, K., 2021. Evaluating Suitability Multi-Scale Terrain Attribute Calculation Approaches Seabed Mapping Applications. Marine Geodesy 44, 327–385. https://doi.org/10.1080/01490419.2021.1925789 Risk, M.J., 1972. Fish Diversity Coral Reef Virgin Islands. Atoll Research Bulletin 153, 1–4. https://doi.org/10.5479/si.00775630.153.1 Ritter, P., 1987. vector-based slope aspect generation algorithm. Photogrammetric Engineering Remote Sensing 53, 1109–1111. Sappington, J.M., Longshore, K.M., Thompson, D.B., 2007. Quantifying Landscape Ruggedness Animal Habitat Analysis: Case Study Using Bighorn Sheep Mojave Desert. Journal Wildlife Management 71, 1419–1426. https://doi.org/10.2193/2005-723 Walbridge, S., Slocum, N., Pobuda, M., Wright, D.J., 2018. Unified geomorphological analysis workflows benthic terrain modeler. Geosciences 8, 94. https://doi.org/10.3390/geosciences8030094 Weiss, ., 2001. Topographic Position Landforms Analysis. Presented ESRI user conference, San Diego, CA. Wilson, J.P., Gallant, J.C. (Eds.), 2000. Terrain Analysis: Principles Applications. John Wiley & Sons, Inc. Wilson, M.F., O’Connell, B., Brown, C., Guinan, J.C., Grehan, .J., 2007. Multiscale Terrain Analysis Multibeam Bathymetry Data Habitat Mapping Continental Slope. Marine Geodesy 30, 3-35. https://doi.org/10.1080/01490410701295962 Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Ilich. Author, maintainer. Vincent Lecours. Author. Benjamin Misiuk. Author. Steven Murawski. Author.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067 Ilich, Alexander R.; Misiuk, Benjamin; Lecours, Vincent; Murawski, Steven .; 2021. “MultiscaleDTM”, doi:10.5281/zenodo.5548338. https://github.com/ailich/MultiscaleDTM.","code":"@Article{,   author = {Alexander R. Ilich and Benjamin Misiuk and Vincent Lecours and Steven A. Murawski},   title = {MultiscaleDTM: An open-source R package for multiscale geomorphometric analysis},   doi = {10.1111/tgis.13067},   year = {2023},   publisher = {Wiley},   volume = {27},   number = {4},   journal = {Transactions in GIS}, } @Misc{,   author = {Alexander R. Ilich and Benjamin Misiuk and Vincent Lecours and Steven A. Murawski},   title = {MultiscaleDTM},   year = {2021},   doi = {10.5281/zenodo.5548338},   url = {https://github.com/ailich/MultiscaleDTM}, }"},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"readme","dir":"","previous_headings":"","what":"Multi-Scale Geomorphometric Terrain Attributes","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"Alexander Ilich April 25, 2025","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"multiscaledtm","dir":"","previous_headings":"","what":"MultiscaleDTM","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"Please cite Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"R package calculates multi-scale geomorphometric terrain attributes regularly gridded digital terrain models (DTM; .e. elevation bathymetry rasters) via specified window described Ilich et al. (2023).  Figure adapted Wilson et al. (2007)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"install-and-load-package","dir":"","previous_headings":"","what":"Install and Load Package","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"package can installed CRAN using install.packages(\"MultiscaleDTM\") development version can installed github using code remotes::install_github(\"ailich/MultiscaleDTM\"). using Windows, may need install Rtools using instructions found ). install github must already remotes package installed, can installed using install.packages(\"remotes\") package relies terra package handling spatial raster data.","code":""},{"path":[]},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"slope-aspect-and-curvature","dir":"","previous_headings":"Main Functions","what":"Slope, Aspect and Curvature","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"SlpAsp - Calculates multi-scale slope aspect using modified version algorithm Misiuk et al (2021) extends classical formulations slope restricted 3x3 window (Fleming Hoffer, 1979; Horn et al., 1981; Ritter, 1987). algorithm considers subset cells within focal window, specifically four cells edge focal window directly , , left, right focal cell “rook” method, additional four corner cells “queen” method, edge cells “boundary” method.  DirSlp - Calculates multi-scale slope specified direction. Qfit - Calculates slope, aspect, curvature, morphometric features fitting quadratic surface focal window using ordinary least squares using equation shown -f regression parameters, Z elevation/depth, X east/west coordinates focal window relative focal cell, Y north/south coordinates focal window relative focal cell (Evans, 1980; Wilson et al., 2007; Wood, 1996). morphometric features algorithm modified use robust measures curvature based suggestions Minár et al. (2020). Z=aX2+bY2+cXY+dX+eY+f Z = aX^2 + ^2 +cXY+ dX +eY +f  Figure adapted Walbridge et al., (2018) Pfit - Calculates multiscale slope aspect aspect fitting planar surface focal window using ordinary least squares. provide equivalent results using quadratic fit (Jones, 1998) less computationally expensive.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"roughness","dir":"","previous_headings":"Main Functions","what":"Roughness","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"VRM - Vector ruggedness measure (Sappington et al. 2007) quantifies roughness measuring dispersion vectors normal terrain surface. accomplished calculating local (3 x 3 cell) slope aspect, constructing unit vectors normal cell DTM. unit vectors decomposed corresponding x, y, z components (.e. x, y, z coordinates head vector relative origin) used following equation (note: N number cells window). VRM ranges zero one, representing completely smooth rough surfaces, respectively.  Figure adapted Sappington et al. (2007)  Figure adapted Habib (2021) VRM=1−(∑x)2+(∑y)2+(∑z)2N \\text{VRM} = 1- \\frac{\\sqrt{\\bigg(\\sum x\\bigg)^2+\\bigg(\\sum y\\bigg)^2+\\bigg(\\sum z\\bigg)^2}}{N} x=sin(slope)*sin(aspect) x = sin(\\text{slope})*sin(\\text{aspect}) y=sin(slope)*cos(aspect) y=sin(\\text{slope})*cos(\\text{aspect}) z=cos(slope) z=cos(\\text{slope}) SAPA - Calculates Surface Area Planar Area (Jenness, 2004). Rougher surfaces greater surface area planar area ratio, perfectly smooth surfaces value 1. 3D analog classical “chain--tape” method, calculates roughness ratio contoured distance (chain length) linear distance (tape measure distance; Risk, 1972). Additionally, planar area can corrected slope dividing product x y resolution cosine slope (Du Preez 2015). metric Jenness (2004) De Preez (2015) works per cell level (1x1 cell). function generalizes method multiple scales summing surface areas within focal window adjusting planar area focal window using multi-scale slope (Ilich et al., 2023). SurfaceArea - Calculate surface area grid cell (Jenness, 2004). accomplished connecting focal cell immediate neighbors create 8 large triangles. large triangles trimmed back extent focal cell using principle similar triangles, area 8 smaller triangles calculated summed estimate surface area focal pixel. used within SAPA.  Figure adapted Friedman et al. (2012) created BioRender.com.  Figure adapted Jenness (2004) AdjSD- roughness metric modifies standard deviation elevation/bathymetry account slope (Ilich et al., 2023). first fitting plane data focal window using ordinary least squares, extracting residuals, calculating standard deviation residuals within focal window.  RIE - Calculates Roughness Index-Elevation quantifies standard deviation residual topography (Cavalli et al., 2008). measure conceptually similar AdjSD rather fitting plane extracting residuals entire focal window, residual topography calculated focal pixel minus focal mean. local standard deviation calculated residual topography using focal filter.  Figure adapted Cavalli et al. (2008)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"relative-position","dir":"","previous_headings":"Main Functions","what":"Relative Position","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"Relative position represents whether area local high low relation reference height. calculated value focal cell minus value reference elevation often mean included values focal window also functions median, min, max included values. Positive values indicate local topographic highs negative values indicate lows.Relative Position can expressed units input DTM raster can standardized relative local topography dividing standard deviation range included elevation values focal window. RelPos - flexible general purpose function calculate relative position using rectangular, circular, annulus, custom shaped focal window various functions included values reference height relative position functions calls RelPos different default parameter values. TPI - Topographic Position Index (Weiss, 2001) difference value focal cell mean surrounding cells (.e. central cell excluded focal opertaions) within rectangular circular focal window. DMV - Difference Mean Value (Lecours et al., 2017; Wilson, Gallant, 2000) difference value focal cell mean cells (.e. including focal cell) rectangular circular focal window. BPI - Bathymetric Position Index (Lundblad et al., 2006) difference value focal cell mean surrounding cells contained within annulus shaped window. Since annulus shaped window used, requires inner outer radius specified. Although name contains “bathymetric,” due context proposed, equally applicable terrestrial elevation data.  Examples different focal window shapes. Shown 13 x 13 cell rectangular window (left), circular window radius six cells (center), annulus window inner radius four cells outer radius six cells (right).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"tutorial calculate terrain attributes using 5 x 5 cell rectangular window; however, rectangular odd numbered window size used. Window size specified using w parameter. Rectangular window sizes specified vector length 2 c(n_rows, n_cols). single number provided used number rows columns. Functions calculate relative position currently support focal window shapes. examples, additionally calculate measures using circular focal window radius 2 cells, annulus window inner radius 4 outer radius 6 cells, custom focal window. Circular windows specified single number representing radius, annulus windows specified vector length 2 c(inner_radius, outer_radius), custom windows specified matrix values showing data include (1’s) data exclude (NA’s). Load packages See package help page Read Data Typically raster data loaded R via terra package’s rast function. use instead load georeferenced version R’s built volcano data set using erupt function.","code":"library(MultiscaleDTM) #Load MultiscaleDTM package help(package=\"MultiscaleDTM\") r<- erupt()"},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"slope-aspect-and-curvature-1","dir":"","previous_headings":"Tutorial","what":"Slope, Aspect, and Curvature","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"explore measures interactive environment use explore_terrain() go website","code":"slp_asp<- SlpAsp(r = r, w = c(5,5), unit = \"degrees\", method = \"queen\", metrics = c(\"slope\", \"aspect\", \"eastness\", \"northness\"), na.rm=TRUE) qmetrics<- Qfit(r, w = c(5,5), unit = \"degrees\", metrics = c(\"elev\", \"qslope\", \"qaspect\", \"qeastness\", \"qnorthness\", \"profc\", \"planc\", \"twistc\", \"meanc\", \"maxc\", \"minc\", \"features\"), na.rm = TRUE)"},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"roughness-1","dir":"","previous_headings":"Tutorial","what":"Roughness","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"","code":"vrm<- VRM(r, w=c(5,5), na.rm = TRUE) sapa<- SAPA(r, w=c(5,5), slope_correction = TRUE, na.rm=TRUE) adj_SD<- AdjSD(r, w=c(5,5), na.rm = TRUE) rie<- RIE(r, w=c(5,5), na.rm = TRUE)"},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"relative-position-1","dir":"","previous_headings":"Tutorial","what":"Relative Position","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"Note, “s” start names indicates attribute standardized based local topography.     Circle annulus windows can specified either cell units (number raster cells) map units (e.g. meters) can useful x y resolutions equal. Additionally, function circle_window annulus_window can used verify specifying window correctly (NA’s excluded cells 1’s included cells) can directly supplied w argument instead.","code":"rp<- RelPos(r, w=matrix(data = c(1,NA,1), nrow = 3, ncol=3), shape = \"custom\", fun = \"median\", na.rm = TRUE) tpi<- TPI(r, w=c(5,5), shape= \"rectangle\", na.rm = TRUE) dmv<- DMV(r, w=2, shape= \"circle\", na.rm = TRUE, stand=\"range\") bpi<- BPI(r, w = c(4,6), unit = \"cell\", stand= \"sd\", na.rm = TRUE) annulus_window(radius = c(4,6), unit = \"cellattr(,\"unit\") ## [1] \"cell\" ## attr(,\"scale\") ## [1] \"4x6\" ## attr(,\"shape\") ## [1] \"annulus\" bpi2<- BPI(r, w = annulus_window(radius = c(4,6), unit = \"cell\"), stand= \"sd\", na.rm = TRUE) # equivalent to BPI code from earlier"},{"path":"https://ailich.github.io/MultiscaleDTM/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Multi-Scale Geomorphometric Terrain Attributes","text":"Cavalli, M., Tarolli, P., Marchi, L., Dalla Fontana, G., 2008. effectiveness airborne LiDAR data recognition channel-bed morphology. CATENA 73, 249–260. https://doi.org/10.1016/j.catena.2007.11.001 Du Preez, C., 2015. new arc–chord ratio (ACR) rugosity index quantifying three-dimensional landscape structural complexity. Landscape Ecol 30, 181–192. https://doi.org/10.1007/s10980-014-0118-8 Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Fleming, M.D., Hoffer, R.M., 1979. Machine processing landsat MSS data DMA topographic data forest cover type mapping (. LARS Technical Report 062879). Laboratory Applications Remote Sensing, Purdue University, West Lafayette, Indiana. Friedman, ., Pizarro, O., Williams, S.B., Johnson-Roberson, M., 2012. Multi-Scale Measures Rugosity, Slope Aspect Benthic Stereo Image Reconstructions. PLOS ONE 7, e50440. https://doi.org/10.1371/journal.pone.0050440 Habib, M., 2021. Quantifying Topographic Ruggedness Using Principal Component Analysis. Advances Civil Engineering 2021, e3311912. https://doi.org/10.1155/2021/3311912 Horn, B.K., 1981. Hill Shading Reflectance Map. Proceedings IEEE 69, 14–47. Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067 Jenness, J.S., 2004. Calculating landscape surface area digital elevation models. Wildlife Society Bulletin 32, 829–839. https://doi.org/10.2193/0091-7648(2004)032%5B0829:CLSAFD%5D2.0.CO;2 Jones, K. H. (1998). comparison algorithms used compute hill slope property DEM. Computers & Geosciences, 24(4), 315–323. https://doi.org/10.1016/S0098-3004(98)00032-6 Lecours, V., Devillers, R., Simms, .E., Lucieer, V.L., Brown, C.J., 2017. Towards Framework Terrain Attribute Selection Environmental Studies. Environmental Modelling & Software 89, 19–30. https://doi.org/10.1016/j.envsoft.2016.11.027 Lundblad, E.R., Wright, D.J., Miller, J., Larkin, E.M., Rinehart, R., Naar, D.F., Donahue, B.T., Anderson, S.M., Battista, T., 2006. benthic terrain classification scheme American Samoa. Marine Geodesy 29, 89–111. https://doi.org/10.1080/01490410600738021 Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414 Misiuk, B., Lecours, V., Dolan, M.F.J., Robert, K., 2021. Evaluating Suitability Multi-Scale Terrain Attribute Calculation Approaches Seabed Mapping Applications. Marine Geodesy 44, 327–385. https://doi.org/10.1080/01490419.2021.1925789 Risk, M.J., 1972. Fish Diversity Coral Reef Virgin Islands. Atoll Research Bulletin 153, 1–4. https://doi.org/10.5479/si.00775630.153.1 Ritter, P., 1987. vector-based slope aspect generation algorithm. Photogrammetric Engineering Remote Sensing 53, 1109–1111. Sappington, J.M., Longshore, K.M., Thompson, D.B., 2007. Quantifying Landscape Ruggedness Animal Habitat Analysis: Case Study Using Bighorn Sheep Mojave Desert. Journal Wildlife Management 71, 1419–1426. https://doi.org/10.2193/2005-723 Walbridge, S., Slocum, N., Pobuda, M., Wright, D.J., 2018. Unified geomorphological analysis workflows benthic terrain modeler. Geosciences 8, 94. https://doi.org/10.3390/geosciences8030094 Weiss, ., 2001. Topographic Position Landforms Analysis. Presented ESRI user conference, San Diego, CA. Wilson, J.P., Gallant, J.C. (Eds.), 2000. Terrain Analysis: Principles Applications. John Wiley & Sons, Inc. Wilson, M.F., O’Connell, B., Brown, C., Guinan, J.C., Grehan, .J., 2007. Multiscale Terrain Analysis Multibeam Bathymetry Data Habitat Mapping Continental Slope. Marine Geodesy 30, 3-35. https://doi.org/10.1080/01490410701295962 Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/AdjSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","title":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","text":"Calculates standard deviation bathymetry (measure rugosity). Using sliding rectangular window plane fit data standard deviation residuals calculated (Ilich et al., 2023)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/AdjSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","text":"","code":"AdjSD(   r,   w = c(3, 3),   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/AdjSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","text":"r DTM SpatRaster RasterLayer projected coordinate system map units match elevation/depth units w vector length 2 specifying dimensions rectangular window use first number number rows second number number columns. Window size must odd number. na.rm logical indicating whether remove NA values calculations include_scale logical indicating whether append window size layer names (default = FALSE) filename character Output filename. overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/AdjSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","text":"SpatRaster RasterLayer adjusted rugosity","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/AdjSD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","text":"Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/AdjSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates standard deviation of bathymetry (a measure of rugosity) adjusted for slope — AdjSD","text":"","code":"r<- erupt() adjsd<- AdjSD(r, w=c(5,5), na.rm = TRUE) plot(adjsd)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/BPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Bathymetric Position Index — BPI","title":"Calculates Bathymetric Position Index — BPI","text":"Calculates Bathymetric Position Index (BPI). BPI measure relative position calculates difference value focal cell mean cells contained within annulus shaped neighborhood. Positive values indicate local highs (.e. peaks) negative values indicate local lows (.e. depressions). BPI can expressed units input DTM raster can standardized relative local topography dividing standard deviation range included elevation values focal window. BPI calls function RelPos internally serves general purpose flexible function calculating relative position.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/BPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Bathymetric Position Index — BPI","text":"","code":"BPI(   r,   w,   stand = \"none\",   unit = \"cell\",   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/BPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Bathymetric Position Index — BPI","text":"r r DTM SpatRaster RasterLayer. w Vector length 2 specifying c(inner, outer) radii annulus \"cell\" \"map\" units focal weights matrix created MultiscaleDTM::annulus_window. Inner radius must less equal outer radius. default size. stand Standardization method. Either \"none\" (default), \"range\" \"sd\" indicating whether relative position standardized dividing standard deviation range included values focal window. stand 'none' layer name \"bpi\", otherwise \"sbpi\" indicate layer standardized. unit Unit w vector (default unit=\"cell\"). w matrix, unit ignored extracted directly w. na.rm Logical indicating whether remove NA values calculations. include_scale Logical indicating whether append window size layer names (default = FALSE) character vector specifying name like append number specifying number significant digits. include_scale = TRUE appended scale inner outer radius. unit=\"map\" window size \"MU\" number indicating number represents scale map units (note units can extracted w created MultiscaleDTM::circle_window MultiscaleDTM::annulus_window). filename Character output filename. overwrite Logical. TRUE, filename overwritten (default FALSE). wopt List named options writing files writeRaster.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/BPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Bathymetric Position Index — BPI","text":"SpatRaster RasterLayer.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/BPI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Bathymetric Position Index — BPI","text":"Lundblad, E.R., Wright, D.J., Miller, J., Larkin, E.M., Rinehart, R., Naar, D.F., Donahue, B.T., Anderson, S.M., Battista, T., 2006. benthic terrain classification scheme American Samoa. Marine Geodesy 29, 89–111. https://doi.org/10.1080/01490410600738021","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/BPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Bathymetric Position Index — BPI","text":"","code":"r<- erupt() bpi<- BPI(r, w = c(2,4), stand= \"none\", unit = \"cell\", na.rm = TRUE) plot(bpi)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DMV.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Difference from Mean Value (DMV) — DMV","title":"Calculates Difference from Mean Value (DMV) — DMV","text":"Calculates Difference Mean Value (DMV). DMV measure relative position calculates difference value focal cell mean cells rectangular circular neighborhood. Positive values indicate local highs (.e. peaks) negative values indicate local lows (.e. depressions). DMV can expressed units input DTM raster can standardized relative local topography dividing standard deviation range elevation values focal window. DMV calls function RelPos internally serves general purpose flexible function calculating relative position.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DMV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Difference from Mean Value (DMV) — DMV","text":"","code":"DMV(   r,   w = dplyr::case_when(tolower(shape) == \"rectangle\" ~ 3, tolower(shape) == \"circle\" &     isTRUE(tolower(unit) == \"cell\") ~ 1, tolower(shape) == \"circle\" &     isTRUE(tolower(unit) == \"map\") ~ max(terra::res(r))),   shape = \"rectangle\",   stand = \"none\",   unit = \"cell\",   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DMV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Difference from Mean Value (DMV) — DMV","text":"r DTM SpatRaster RasterLayer. w \"rectangle\" focal window, vector length 2 containing odd numbers specifying dimensions first number number rows second number columns (single number number rows columns equal). \"circle\" shaped focal window, single integer representing radius \"cell\" \"map\" units focal weights matrix created MultiscaleDTM::circle_window. shape Character representing shape focal window. Either \"rectangle\" (default) \"circle\". stand Standardization method. Either \"none\" (default), \"range\" \"sd\" indicating whether TPI standardized dividing standard deviation range included values focal window. stand 'none' layer name \"dmv\", otherwise \"sdmv\" indicate layer standardized. unit Unit w shape 'circle' vector (default unit=\"cell\"). circular windows specified matrix, unit ignored extracted directly w. rectangular custom focal windows set unit='cell' set unit NA/NULL. na.rm Logical indicating whether remove NA values calculations. include_scale Logical indicating whether append window size layer names (default = FALSE) character vector specifying name like append number specifying number significant digits. include_scale = TRUE number rows number columns appended rectangular windows. circular windows single number representing radius. unit=\"map\" window size \"MU\" number indicating number represents scale map units (note units can extracted w created MultiscaleDTM::circle_window). filename Character output filename. overwrite Logical. TRUE, filename overwritten (default FALSE). wopt List named options writing files writeRaster.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DMV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Difference from Mean Value (DMV) — DMV","text":"SpatRaster RasterLayer.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DMV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Difference from Mean Value (DMV) — DMV","text":"Lecours, V., Devillers, R., Simms, .E., Lucieer, V.L., Brown, C.J., 2017. Towards Framework Terrain Attribute Selection Environmental Studies. Environmental Modelling & Software 89, 19-30. https://doi.org/10.1016/j.envsoft.2016.11.027 Wilson, J.P., Gallant, J.C. (Eds.), 2000. Terrain Analysis: Principles Applications. John Wiley & Sons, Inc.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DMV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Difference from Mean Value (DMV) — DMV","text":"","code":"r<- erupt() dmv<- DMV(r, w=c(5,5), shape= \"rectangle\", stand=\"range\", na.rm = TRUE) plot(dmv)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":null,"dir":"Reference","previous_headings":"","what":"Directional Slope — DirSlp","title":"Directional Slope — DirSlp","text":"Calculates slope along specified direction. Upslope values positive downslope values negative.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directional Slope — DirSlp","text":"","code":"DirSlp(   alpha,   dz.dx,   dz.dy,   unit = \"degrees\",   abs = FALSE,   include_dir = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directional Slope — DirSlp","text":"alpha Angle (specified 'unit') like calculate slope. 0 represents map direction (usually North) increases clockwise. can single number can raster cell values. dz.dx change elevation per unit distance x direction SpatRaster, RasterLayer, single number. Positive right. See details . dz.dy change elevation per unit distance y direction SpatRaster RasterLayer,single number Positive . See details . unit \"degrees\" \"radians\" (default \"degrees\") abs logical indicating whether return absolute value slope (default FALSE) include_dir logical indicating whether append direction layer name (default FALSE) filename character Output filename. Can single filename, many filenames layers write file layer overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Directional Slope — DirSlp","text":"SpatRaster RasterStack slope /aspect (components aspect)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directional Slope — DirSlp","text":"dz.dx dz.dy can calculated specified scale via SlpAsp, Pfit, Qfit (zx zy), existing layer calculated another program.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Directional Slope — DirSlp","text":"Neteler, M., & Mitasova, H. (2008). Open source GIS: GRASS GIS approach (3rd ed.). Springer.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/DirSlp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Directional Slope — DirSlp","text":"","code":"r<- erupt() dz1<- SlpAsp(r, metrics = c(\"dz.dx\", \"dz.dy\")) dz2<- Qfit(r, metrics = c(), return_params = TRUE, as_derivs=TRUE) dz3<- Pfit(r, metrics = c(\"dz.dx\", \"dz.dy\")) dirslp1<- DirSlp(alpha = 45, dz.dx= dz1$dz.dx, dz.dy= dz1$dz.dy) dirslp2<- DirSlp(alpha = 45, dz.dx= dz2$zx, dz.dy= dz2$zy) dirslp3<- DirSlp(alpha = 45, dz.dx= dz3$dz.dx, dz.dy= dz3$dz.dy)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"Calculates multiscale slope aspect DTM sliding rectangular window using using local planar fit surface (Sharpnack Akin 1969).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"","code":"Pfit(   r,   w = c(3, 3),   unit = \"degrees\",   metrics = c(\"pslope\", \"paspect\", \"peastness\", \"pnorthness\"),   na.rm = FALSE,   include_scale = FALSE,   mask_aspect = TRUE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"r DTM SpatRaster (terra) RasterLayer (raster) projected coordinate system map units match elevation/depth units (assumed north calculations aspect, northness, eastness). w Vector length 2 specifying dimensions rectangular window use first number number rows second number number columns. Window size must odd number. Default 3x3. unit \"degrees\" \"radians\". metrics Character vector specifying terrain attributes return. default return c(\"pslope\", \"paspect\", \"peastness\", \"pnorthness\"). preceded 'p' differentiate measures calculated SlpAsp() 'Qfit' 'p' indicates planar surface used calculation. Additional measures available include \"dz.dx\" \"dz.dy\" x y components slope respectively. na.rm Logical indicating whether remove NA values calculations. include_scale logical indicating whether append window size layer names (default = FALSE) mask_aspect Logical. TRUE (default), aspect set NA northness eastness set 0 slope = 0. FALSE, aspect set 270 degrees 3pi/2 radians ((-pi/2)- atan2(0,0)+2pi) northness eastness calculated . filename character Output filename. Can single filename, many filenames layers write file layer overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"SpatRaster (terra) RasterStack/RasterLayer (raster)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"first order derivatives needed, Pfit faster Qfit provide equivalent results Qfit first order derivatives (Jones, 1998) na.rm=FALSE approximately results otherwise.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Jones, K. H. (1998). comparison algorithms used compute hill slope property DEM. Computers & Geosciences, 24(4), 315–323. https://doi.org/10.1016/S0098-3004(98)00032-6 Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Pfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates multiscale slope and aspect using a local planar fit. — Pfit","text":"","code":"r<- erupt() pmetrics<- Pfit(r, w = c(5,5), unit = \"degrees\", na.rm = TRUE) plot(pmetrics)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"Calculates multiscale slope, aspect, curvature, morphometric features DTM sliding rectangular window using local quadratic fit surface (Evans, 1980; Wood, 1996).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"","code":"Qfit(   r,   w = c(3, 3),   unit = \"degrees\",   metrics = c(\"elev\", \"qslope\", \"qaspect\", \"qeastness\", \"qnorthness\", \"profc\", \"planc\",     \"twistc\", \"meanc\", \"maxc\", \"minc\", \"features\"),   slope_tolerance = 1,   curvature_tolerance = 1e-04,   outlier_quantile = c(0.01, 0.99),   na.rm = FALSE,   force_center = FALSE,   include_scale = FALSE,   mask_aspect = TRUE,   return_params = FALSE,   as_derivs = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"r DTM SpatRaster (terra) RasterLayer (raster) projected coordinate system map units match elevation/depth units (assumed north calculations aspect, northness, eastness). w Vector length 2 specifying dimensions rectangular window use first number number rows second number number columns. Window size must odd number. Default 3x3. unit \"degrees\" \"radians\". metrics Character vector specifying terrain attributes return. default return available metrics, c(\"elev\", \"qslope\", \"qaspect\", \"qeastness\", \"qnorthness\", \"profc\", \"planc\", \"twistc\", \"meanc\", \"maxc\", \"minc\", \"features\"). Slope, aspect, eastness, northness preceded 'q' differentiate measures calculated SlpAsp() 'q' indicates quadratic surface used calculation. 'elev' predicted elevation central cell (.e. intercept term regression) relevant force_center=FALSE. 'profc' profile curvature, 'planc' plan curvature, 'meanc' mean curvature, 'minc' minimum curvature, 'features' morphometric features. See details. slope_tolerance Slope tolerance defines 'flat' surface (degrees; default = 1.0). Relevant features layer. curvature_tolerance Curvature tolerance defines 'planar' surface (default = 0.0001). Relevant features layer. outlier_quantile numeric vector length two three. two numbers used specifies lower (Q1) upper (Q2) quantiles used determining interquantile range (IQR). values 0 1 Q2 > Q1. optional third number can used specify size regular sample taken can useful full dataset large fit memory. Values considered outliers replaced NA less Q1-(100IQR) greater Q2+(100IQR), IQR=Q2-Q1. outlier filter performed results regression parameters (''-'e' 'elev') prior calculation subsequent terrain attributes. Note c(0,1) skip outlier filtering step can speed computations. default c(0.01,0.99). na.rm Logical indicating whether remove NA values calculations. force_center Logical specifying whether constrain model central cell focal window include_scale Logical indicating whether append window size layer names (default = FALSE). mask_aspect Logical. TRUE (default), aspect set NA northness eastness set 0 slope = 0. FALSE, aspect set 270 degrees 3pi/2 radians ((-pi/2)- atan2(0,0)+2pi) northness eastness calculated . return_params Logical indicating whether return Wood/Evans regression parameters (default = FALSE). as_derivs Logical indicating whether parameters formatted partial derivatives instead regression coefficients (default = FALSE) (Minár et al., 2020). filename character Output filename. Can single filename, many filenames layers write file layer overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"SpatRaster (terra) RasterStack/RasterLayer (raster)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"function calculates slope, aspect, eastness, northness, profile curvature, plan curvature, mean curvature, twisting curvature, maximum curvature, minimum curvature, morphometric features, smoothed version elevation surface using quadratic surface fit Z = aX^2+^2+cXY+dX+eY+f, Z elevation depth values, X Y xy coordinates relative central cell focal window, -f parameters estimated (Evans, 1980; Minár et al. 2020; Wood, 1996). aspect, 0 degrees represents north (rotated, direction increases go rows data) increases clockwise. calculations northness (cos(asp)) eastness (sin(asp)), y direction assumed north, true data (e.g. using rotated coordinate system), must adjust accordingly. curvature formulas adapted Minár et al 2020. Therefore  curvatures measured units 1/length (e.g. m^-1) except twisting curvature measured radians/length (.e. change angle per unit distance), adopt geographic sign convention convex positive concave negative (.e., hills considered convex positive. Naming convention curvatures consistent across literature, however Minár et al (2020) suggested framework reported measures curvature translate profile curvature = (kn)s, plan curvature = (kn)c, twisting curvature (Tg)c, mean curvature = kmean, maximum curvature = kmax, minimum curvature = kmin. morphometric features cross-sectional curvature (zcc) replaced planc (kn)c, z”min replaced kmax, z”max replaced kmin robust ways measures types curvature (Minár et al., 2020). Additionally, planar feature Wood (1996) split planar flat slope depending whether slope threshold exceeded .","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414 Wilson, M.F., O’Connell, B., Brown, C., Guinan, J.C., Grehan, .J., 2007. Multiscale Terrain Analysis Multibeam Bathymetry Data Habitat Mapping Continental Slope. Marine Geodesy 30, 3-35. https://doi.org/10.1080/01490410701295962 Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/Qfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates multiscale slope, aspect, curvature, and morphometric features using a local quadratic fit — Qfit","text":"","code":"r<- erupt() qmetrics<- Qfit(r, w = c(5,5), unit = \"degrees\", na.rm = TRUE) plot(qmetrics)   # To get only the regression coefficients, set \"metrics=c()\" and \"return_params=TRUE\" reg_coefs<- Qfit(r, w = c(5,5), metrics=c(), unit = \"degrees\", na.rm = TRUE, return_params=TRUE) plot(reg_coefs)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Roughness Index-Elevation — RIE","title":"Calculates Roughness Index-Elevation — RIE","text":"Calculates Roughness Index-Elevation. standard deviation residual topography focal window residual topography calculated focal pixel minus focal mean.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Roughness Index-Elevation — RIE","text":"","code":"RIE(   r,   w = c(3, 3),   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Roughness Index-Elevation — RIE","text":"r DTM SpatRaster RasterLayer w vector length 2 specifying dimensions rectangular window use first number number rows second number number columns. Window size must odd number. Default 3x3. na.rm logical indicating whether remove NA values calculation SD include_scale logical indicating whether append window size layer names (default = FALSE) filename character Output filename. overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Roughness Index-Elevation — RIE","text":"SpatRaster RasterLayer","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Roughness Index-Elevation — RIE","text":"Note original paper Cavalli et al (2008) uses fixed 5x5 window uses 25 denominator indicating use population standard deviation. implementation provides flexible window size istead calculates sample standard deviation uses denominator n-1.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Roughness Index-Elevation — RIE","text":"Cavalli, M., Tarolli, P., Marchi, L., Dalla Fontana, G., 2008. effectiveness airborne LiDAR data recognition channel-bed morphology. CATENA 73, 249–260. https://doi.org/10.1016/j.catena.2007.11.001","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RIE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Roughness Index-Elevation — RIE","text":"","code":"r<- erupt() rie<- RIE(r, w=c(5,5), na.rm = TRUE) plot(rie)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RelPos.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Relative Position of a focal cell — RelPos","title":"Calculates Relative Position of a focal cell — RelPos","text":"Calculates relative position focal cell, represents whether area local high low. Relative position value focal cell minus value reference elevation (often mean included values focal window see \"fun\" argument). Positive values indicate local highs (.e. peaks) negative values indicate local lows (.e. depressions). Relative Position can expressed units input DTM raster can standardized relative local topography dividing standard deviation range included elevation values focal window.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RelPos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Relative Position of a focal cell — RelPos","text":"","code":"RelPos(   r,   w = dplyr::case_when(tolower(shape) == \"rectangle\" ~ 3, tolower(shape) == \"circle\" &     isTRUE(tolower(unit) == \"cell\") ~ 1, tolower(shape) == \"circle\" &     isTRUE(tolower(unit) == \"map\") ~ max(terra::res(r))),   shape = \"rectangle\",   stand = \"none\",   exclude_center = FALSE,   unit = \"cell\",   fun = \"mean\",   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RelPos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Relative Position of a focal cell — RelPos","text":"r DTM SpatRaster RasterLayer. w \"rectangle\" focal window, vector length 2 containing odd numbers specifying dimensions first number number rows second number columns (single number number rows columns equal). \"circle\" shaped focal window, single integer representing radius \"cell\" \"map\" units focal weights matrix created MultiscaleDTM::circle_window. default radius 1 cell unit= \"cell\" maximum x y cell resolution unit=\"map\". \"annulus\" shaped focal window, vector length 2 specifying c(inner, outer) radii annulus \"cell\" \"map\" units focal weights matrix created MultiscaleDTM::annulus_window. Inner radius must less equal outer radius. default size annulus window. \"custom\" focal window shape used, w must focal weights matrix 1's included values NAs excluded values. shape Character representing shape focal window. Either \"rectangle\" (default), \"circle\", \"annulus\", \"custom\". \"custom\" shape used, w must focal weights matrix. stand Standardization method. Either \"none\" (default), \"range\" \"sd\" indicating whether relative position standardized dividing standard deviation range included values focal window. stand 'none' layer name \"rpos\", otherwise \"srpos\" indicate layer standardized. exclude_center Logical indicating whether exclude central value focal calculations (Default=FALSE). Use FALSE DMV TRUE TPI. Note, focal weights matrix supplied w, setting exclude_center=TRUE overwrite center value w NA, setting exclude_center=FALSE overwrite central value 1. unit Unit w shape 'circle' 'annulus' vector (default unit=\"cell\"). circular annulus shaped windows specified matrix, unit ignored extracted directly w. rectangular custom focal windows set unit='cell' set unit NA/NULL. fun Function apply included values determine reference elevation. Accepted values \"mean\",\"median\", \"min\", \"max\". default \"mean\" na.rm Logical indicating whether remove NA values calculations. include_scale Logical indicating whether append window size layer names (default = FALSE) character vector specifying name like append number specifying number significant digits. include_scale = TRUE number rows number columns appended rectangular custom windows. circular windows single number representing radius. annulus windows inner outer radius. unit=\"map\" window size \"MU\" number indicating number represents scale map units (note units can extracted w created MultiscaleDTM::circle_window MultiscaleDTM::annulus_window). filename Character output filename. overwrite Logical. TRUE, filename overwritten (default FALSE). wopt List named options writing files writeRaster.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RelPos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Relative Position of a focal cell — RelPos","text":"SpatRaster RasterLayer.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RelPos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Relative Position of a focal cell — RelPos","text":"Lecours, V., Devillers, R., Simms, .E., Lucieer, V.L., Brown, C.J., 2017. Towards Framework Terrain Attribute Selection Environmental Studies. Environmental Modelling & Software 89, 19-30. https://doi.org/10.1016/j.envsoft.2016.11.027 Lundblad, E.R., Wright, D.J., Miller, J., Larkin, E.M., Rinehart, R., Naar, D.F., Donahue, B.T., Anderson, S.M., Battista, T., 2006. benthic terrain classification scheme American Samoa. Marine Geodesy 29, 89–111. https://doi.org/10.1080/01490410600738021 Weiss, ., 2001. Topographic Position Landforms Analysis. Presented ESRI user conference, San Diego, CA. Wilson, J.P., Gallant, J.C. (Eds.), 2000. Terrain Analysis: Principles Applications. John Wiley & Sons, Inc.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/RelPos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Relative Position of a focal cell — RelPos","text":"","code":"r<- erupt() rpos<- RelPos(r, w = c(5,5), shape= \"rectangle\", exclude_center = TRUE, na.rm = TRUE) plot(rpos)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates surface area to planar area rugosity — SAPA","title":"Calculates surface area to planar area rugosity — SAPA","text":"Calculates surface area (Jenness, 2004) planar area rugosity default corrects planar area slope using arc-chord ratio (Du Preez, 2015). Additionally, method modified allow calculations multiple different window sizes (see details Ilich et al. (2023)).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates surface area to planar area rugosity — SAPA","text":"","code":"SAPA(   r = NULL,   w = 1,   slope_correction = TRUE,   na.rm = FALSE,   include_scale = FALSE,   slope_layer = NULL,   sa_layer = NULL,   check = TRUE,   tol = 1e-04,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates surface area to planar area rugosity — SAPA","text":"r DTM SpatRaster RasterLayer projected coordinate system map units match elevation/depth units (used slope_layer sa_layer specified). w single number vector length 2 (row, column) specifying dimensions rectangular window surface area summed. Window size must odd number. 1 refers \"native\" scale surface area planar area calculated per cell (traditional implementation). slope_correction Whether use arc-chord ratio correct planar area slope (default TRUE) na.rm logical indicating whether remove/account NAs calculations. FALSE calculations involving NA NA. TRUE, NA values removed accounted . include_scale logical indicating whether append window size layer names (default = FALSE) slope_layer Optionally specify appropriate slope layer RADIANS use. supplied, calculated using SlpAsp function using \"boundary\" method. slope layer window size 2 larger w specified SAPA. sa_layer Optionally specify surface area raster contains surface area per cell level. can calculated SurfaceArea function. calculating SAPA multiple scales efficient supply need calculated every time. check logical indicating whether check values go theoretical value 1 (default TRUE). found warning displayed values less 1 replaced 1. ignored slope_correction FALSE. tol Tolerance related 'check' comparing see values less 1. Values still replaced check TRUE, warning displayed amount 1 less equal tolerance (default = 0.0001). filename character Output filename. overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates surface area to planar area rugosity — SAPA","text":"SpatRaster RasterLayer","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates surface area to planar area rugosity — SAPA","text":"Planar area calculated x_dis * y_dis uncorrected slope (x_dis * y_dis)/cos(slope) corrected slope. w=1, called \"native\" scale equivalent presented Du Preez (2015) available ArcGIS Benthic Terrain Modeller add-. case operations performed per cell basis x_dis resolution raster x direction (left/right) y_dis resolution raster y direction (/) slope calculated using Horn (1981) method. expand multiple scales analysis, w > 1 slope calculated based Misiuk et al (2021) provides modification Horn method extend matric multiple spatial scales. Planar area calculated way w=1 except now x_dis x resolution raster * number columns focal window, y_dis y resolution raster * number rows. w > 1, surface area calculated sum surface areas within focal window. Although (modified) Horn slope used default consistent Du Preez (2015), slope calculated using different algorithm (e.g. Wood 1996) supplied using slope_layer argument. Additionally, slope raster can supplied already calculated wish recalculate . However, careful supply slope layer measured radians calculated relevant scale (2 larger w SAPA).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates surface area to planar area rugosity — SAPA","text":"Du Preez, C., 2015. new arc–chord ratio (ACR) rugosity index quantifying three-dimensional landscape structural complexity. Landscape Ecol 30, 181–192. https://doi.org/10.1007/s10980-014-0118-8 Horn, B.K., 1981. Hill Shading Reflectance Map. Proceedings IEEE 69, 14-47. Ilich, . R., Misiuk, B., Lecours, V., & Murawski, S. . (2023). MultiscaleDTM: open-source R package multiscale geomorphometric analysis. Transactions GIS, 27(4). https://doi.org/10.1111/tgis.13067 Jenness, J.S., 2004. Calculating landscape surface area digital elevation models. Wildlife Society Bulletin 32, 829-839. Misiuk, B., Lecours, V., Dolan, M.F.J., Robert, K., 2021. Evaluating Suitability Multi-Scale Terrain Attribute Calculation Approaches Seabed Mapping Applications. Marine Geodesy 44, 327-385. https://doi.org/10.1080/01490419.2021.1925789","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SAPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates surface area to planar area rugosity — SAPA","text":"","code":"r<- erupt() sapa<- SAPA(r, w=c(5,5), slope_correction = TRUE) #> Warning: SAPA < 1 detected. Minimum value of 0.996353067391887 plot(sapa)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiscale Slope and Aspect — SlpAsp","title":"Multiscale Slope and Aspect — SlpAsp","text":"Calculates multiscale slope aspect based modified version algorithm Misiuk et al (2021) extends classical formulations slope restricted 3x3 window multiple scales using cells edges focal window (see details information).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiscale Slope and Aspect — SlpAsp","text":"","code":"SlpAsp(   r,   w = c(3, 3),   unit = \"degrees\",   method = \"queen\",   metrics = c(\"slope\", \"aspect\", \"eastness\", \"northness\"),   na.rm = FALSE,   include_scale = FALSE,   mask_aspect = TRUE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiscale Slope and Aspect — SlpAsp","text":"r DTM SpatRaster RasterLayer projected coordinate system map units match elevation/depth units w vector length 2 specifying dimensions rectangular window use first number number rows second number number columns. Window size must odd number. unit \"degrees\" \"radians\" method \"rook\", \"queen\" (default), \"boundary\". method indicates cells use computations. \"rook\" uses 4 edge cells directly , , left, right; \"queen\" adds additional four corner cells; \"boundary\" uses edge cells (see details information). metrics character string vector character strings terrain attributes return. Default return c(\"slope\", \"aspect\", \"eastness\", \"northness\"). Additional measures available include \"dz.dx\" \"dz.dy\" x y components slope respectively. na.rm Logical indicating whether remove NA values calculations. applicable \"rook\" method. include_scale logical indicating whether append window size layer names (default = FALSE) mask_aspect logical. mask_aspect TRUE (default), slope evaluates 0, aspect set NA eastness northness set 0. mask_aspect FALSE, slope 0 aspect pi/2 radians 90 degrees behavior raster::terrain, northness eastness calculated . filename character Output filename. Can single filename, many filenames layers write file layer overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiscale Slope and Aspect — SlpAsp","text":"SpatRaster RasterStack slope /aspect (components aspect)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiscale Slope and Aspect — SlpAsp","text":"Slope calculated atan(sqrt(dz.dx^2 + dz.dy^2)) aspect calculated (-pi/2)-atan_2(dz.dy, dz.dx) constrained 0 2 pi/0 360 degrees. dz.dx difference weighted mean right side focal window weighted mean left side focal window divided x distance focal window map units. dz.dy difference weighted mean top side focal window weighted mean bottom side focal window divided y distance focal window map units. cells used computations dependent \"method\" chosen. methods \"queen\" \"boundary\", corner cells half weight cells used computations.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiscale Slope and Aspect — SlpAsp","text":"Fleming, M.D., Hoffer, R.M., 1979. Machine processing landsat MSS data DMA topographic data forest cover type mapping (. LARS Technical Report 062879). Laboratory Applications Remote Sensing, Purdue University, West Lafayette, Indiana. Horn, B.K., 1981. Hill Shading Reflectance Map. Proceedings IEEE 69, 14-47. Misiuk, B., Lecours, V., Dolan, M.F.J., Robert, K., 2021. Evaluating Suitability Multi-Scale Terrain Attribute Calculation Approaches Seabed Mapping Applications. Marine Geodesy 44, 327-385. https://doi.org/10.1080/01490419.2021.1925789 Ritter, P., 1987. vector-based slope aspect generation algorithm. Photogrammetric Engineering Remote Sensing 53, 1109-1111.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SlpAsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiscale Slope and Aspect — SlpAsp","text":"","code":"r<- erupt() slp_asp<- SlpAsp(r = r, w = c(5,5), unit = \"degrees\",  method = \"queen\", metrics = c(\"slope\", \"aspect\",  \"eastness\", \"northness\")) plot(slp_asp)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SurfaceArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates surface area of a DTM — SurfaceArea","title":"Calculates surface area of a DTM — SurfaceArea","text":"Calculates surface area per cell basis DTM based Jenness, 2004.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SurfaceArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates surface area of a DTM — SurfaceArea","text":"","code":"SurfaceArea(   r,   na.rm = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SurfaceArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates surface area of a DTM — SurfaceArea","text":"r DTM SpatRaster RasterLayer projected coordinate system map units match elevation/depth units na.rm Logical indicating whether remove NAs calculations. FALSE, sum eight triangles calculated. TRUE, mean created triangles calculated multiplied 8 scale proper area. filename character Output filename. overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SurfaceArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates surface area of a DTM — SurfaceArea","text":"SpatRaster RasterLayer","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SurfaceArea.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates surface area of a DTM — SurfaceArea","text":"Jenness, J.S., 2004. Calculating landscape surface area digital elevation models. Wildlife Society Bulletin 32, 829-839.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/SurfaceArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates surface area of a DTM — SurfaceArea","text":"","code":"r<- erupt() sa<- SurfaceArea(r) plot(sa)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/TPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Topographic Position Index — TPI","title":"Calculates Topographic Position Index — TPI","text":"Calculates Topographic Position Index (TPI). TPI measure relative position calculates difference value focal cell mean mean surrounding cells (.e. local mean excluding value focal cell).Positive values indicate local highs (.e. peaks) negative values indicate local lows (.e. depressions). TPI can expressed units input DTM raster can standardized relative local topography dividing standard deviation range included elevation  values focal window.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/TPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Topographic Position Index — TPI","text":"","code":"TPI(   r,   w = dplyr::case_when(tolower(shape) == \"rectangle\" ~ 3, tolower(shape) == \"circle\" &     isTRUE(tolower(unit) == \"cell\") ~ 1, tolower(shape) == \"circle\" &     isTRUE(tolower(unit) == \"map\") ~ max(terra::res(r))),   shape = \"rectangle\",   stand = \"none\",   unit = \"cell\",   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/TPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Topographic Position Index — TPI","text":"r DTM SpatRaster RasterLayer. TPI calls function RelPos internally serves general purpose flexible function calculating relative position. w \"rectangle\" focal window, vector length 2 containing odd numbers specifying dimensions first number number rows second number columns (single number number rows columns equal). \"circle\" shaped focal window, single integer representing radius \"cell\" \"map\" units focal weights matrix created MultiscaleDTM::circle_window. shape Character representing shape focal window. Either \"rectangle\" (default) \"circle\". stand Standardization method. Either \"none\" (default), \"range\" \"sd\" indicating whether TPI standardized dividing standard deviation range included values focal window. stand 'none' layer name \"tpi\", otherwise \"stpi\" indicate layer standardized. unit Unit w shape 'circle' vector (default unit=\"cell\"). circular windows specified matrix, unit ignored extracted directly w. rectangular custom focal windows set unit='cell' set unit NA/NULL. na.rm Logical indicating whether remove NA values calculations. include_scale Logical indicating whether append window size layer names (default = FALSE) character vector specifying name like append number specifying number significant digits. include_scale = TRUE number rows number columns appended rectangular windows. circular windows single number representing radius. unit=\"map\" window size \"MU\" number indicating number represents scale map units (note units can extracted w created MultiscaleDTM::circle_window). filename Character output filename. overwrite Logical. TRUE, filename overwritten (default FALSE). wopt List named options writing files writeRaster.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/TPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Topographic Position Index — TPI","text":"SpatRaster RasterLayer.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/TPI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Topographic Position Index — TPI","text":"Weiss, ., 2001. Topographic Position Landforms Analysis. Presented ESRI user conference, San Diego, CA.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/TPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Topographic Position Index — TPI","text":"","code":"r<- erupt() tpi<- TPI(r, w=c(5,5), shape=\"rectangle\", stand=\"none\", na.rm = TRUE) plot(tpi)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"Implementation Sappington et al., (2007) vector ruggedness measure, modified Evans (2021).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"","code":"VRM(   r,   w = c(3, 3),   na.rm = FALSE,   include_scale = FALSE,   filename = NULL,   overwrite = FALSE,   wopt = list() )"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"r DTM SpatRaster RasterLayer w vector length 2 specifying dimensions rectangular window use first number number rows second number number columns. Window size must odd number. Default 3x3. na.rm logical indicating whether remove NA values calculations. See details information. include_scale logical indicating whether append window size layer names (default = FALSE) filename character Output filename. overwrite logical. TRUE, filename overwritten (default FALSE). wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"RasterLayer","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"crs cartesian, na.rm=TRUE, NA's removed slope/aspect calculations. crs lat/lon, na.rm=TRUE affect calculation slope/aspect terra::terrain used since can calculate slope aspect spherical geometry support na.rm. cases na.rm=TRUE, x, y, z components summed na.rm=TRUE, N used denominator VRM equation number non-NA cells window rather total number cells.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"Evans JS (2021). spatialEco. R package version 1.3-6, https://github.com/jeffreyevans/spatialEco. Sappington, J.M., Longshore, K.M., Thompson, D.B., 2007. Quantifying Landscape Ruggedness Animal Habitat Analysis: Case Study Using Bighorn Sheep Mojave Desert. Journal Wildlife Management 71, 1419-1426. https://doi.org/10.2193/2005-723","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/VRM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implementation of the Sappington et al., (2007) vector ruggedness measure — VRM","text":"","code":"r<- erupt() vrm<- VRM(r, w=c(5,5), na.rm = TRUE) plot(vrm)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/annulus_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates annulus focal window — annulus_window","title":"Creates annulus focal window — annulus_window","text":"Creates annulus focal window around central pixel.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/annulus_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates annulus focal window — annulus_window","text":"","code":"annulus_window(radius, unit, resolution)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/annulus_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates annulus focal window — annulus_window","text":"radius radius inner annulus c(inner,outer). Inner radius must less equal outer radius. unit unit radius. Either \"cell\" (number cells, default) \"map\" map units (e.g. meters). resolution resolution intended raster layer (one number vector length 2). necessary unit= \"map\"","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/annulus_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates annulus focal window — annulus_window","text":"matrix 1's NA's showing cells include exclude respectively focal calculations. also contains attributes attributes 'unit', 'scale', 'shape'.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/circle_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates circular focal window — circle_window","title":"Creates circular focal window — circle_window","text":"Creates circular focal window around central pixel.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/circle_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates circular focal window — circle_window","text":"","code":"circle_window(radius, unit, resolution, return_dismat = FALSE)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/circle_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates circular focal window — circle_window","text":"radius radius circular window unit unit radius. Either \"cell\" (number cells) \"map\" map units (e.g. meters). resolution resolution intended raster layer (one number vector length 2). necessary unit= \"map\" return_dismat logical, TRUE return matrix distances focal cell instead matrix pass terra::focal.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/circle_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates circular focal window — circle_window","text":"matrix 1's NA's showing cells include exclude respectively focal calculations, return_dismat=TRUE, matrix indicating distance focal cell. also contains attributes attributes 'unit', 'scale', 'shape' return_dismat=FALSE, return_dismat=TRUE attribute 'unit'.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/classify_features_ff.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function factory to classify morphometric features — classify_features_ff","title":"Helper function factory to classify morphometric features — classify_features_ff","text":"Helper function factory classify morphometric features according modified version Wood 1996 page 120","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/classify_features_ff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function factory to classify morphometric features — classify_features_ff","text":"","code":"classify_features_ff(slope_tolerance = 1, curvature_tolerance = 1e-04)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/classify_features_ff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function factory to classify morphometric features — classify_features_ff","text":"slope_tolerance Slope tolerance defines 'flat' surface (degrees; default 1.0). Relevant features layer. curvature_tolerance Curvature tolerance defines 'planar' surface (default 0.0001). Relevant features layer.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/classify_features_ff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function factory to classify morphometric features — classify_features_ff","text":"function can passed raster::overlay classify morphometric features","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/classify_features_ff.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Helper function factory to classify morphometric features — classify_features_ff","text":"Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/erupt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create georeferenced version of R's built in volcano dataset — erupt","title":"Create georeferenced version of R's built in volcano dataset — erupt","text":"Create georeferenced version R's built volcano dataset. Useful dataset generating quick examples.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/erupt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create georeferenced version of R's built in volcano dataset — erupt","text":"","code":"erupt()"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/erupt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create georeferenced version of R's built in volcano dataset — erupt","text":"SpatRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/erupt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create georeferenced version of R's built in volcano dataset — erupt","text":"","code":"r<- erupt()"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/explore_terrain.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Shiny app to look at terrain attributes — explore_terrain","title":"Interactive Shiny app to look at terrain attributes — explore_terrain","text":"Interactive Shiny app look terrain attributes based surface fit using Wood/Evans Quadratic Equation: Z =ax^2+^2+cxy+dx+ey(+f)","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/explore_terrain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Shiny app to look at terrain attributes — explore_terrain","text":"","code":"explore_terrain()"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/explore_terrain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Shiny app to look at terrain attributes — explore_terrain","text":"return value, launches Shiny app.","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/explore_terrain.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interactive Shiny app to look at terrain attributes — explore_terrain","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate max curvature — kmax","title":"Calculate max curvature — kmax","text":"Calculate max curvature, kmax, equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate max curvature — kmax","text":"","code":"kmax(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate max curvature — kmax","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate max curvature — kmax","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean curvature — kmean","title":"Calculate mean curvature — kmean","text":"Calculate mean curvature, kmean, equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean curvature — kmean","text":"","code":"kmean(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean curvature — kmean","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate mean curvature — kmean","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate min curvature — kmin","title":"Calculate min curvature — kmin","text":"Calculate min curvature, kmin, equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate min curvature — kmin","text":"","code":"kmin(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate min curvature — kmin","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kmin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate min curvature — kmin","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/knc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate normal contour curvature — knc","title":"Calculate normal contour curvature — knc","text":"Calculate normal contour curvature (kn)c, principal representative plan curvature group based regression coefficients equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/knc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate normal contour curvature — knc","text":"","code":"knc(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/knc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate normal contour curvature — knc","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/knc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate normal contour curvature — knc","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kns.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate normal slope line curvature — kns","title":"Calculate normal slope line curvature — kns","text":"Calculate normal slope line curvature (kn)s, principal representative profile curvature group based regression coefficients equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate normal slope line curvature — kns","text":"","code":"kns(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate normal slope line curvature — kns","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/kns.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate normal slope line curvature — kns","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/ku.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate unsphericity curvature — ku","title":"Calculate unsphericity curvature — ku","text":"Calculate  unsphericity curvature, ku, equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/ku.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate unsphericity curvature — ku","text":"","code":"ku(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/ku.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate unsphericity curvature — ku","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/ku.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate unsphericity curvature — ku","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/outlier_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to filter outliers from regression parameters using interquartile range — outlier_filter","title":"Helper function to filter outliers from regression parameters using interquartile range — outlier_filter","text":"Helper function filter outliers regression parameters using interquartile range","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/outlier_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to filter outliers from regression parameters using interquartile range — outlier_filter","text":"","code":"outlier_filter(params, outlier_quantile, wopt = list())"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/outlier_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to filter outliers from regression parameters using interquartile range — outlier_filter","text":"params regression parameters fitted surface outlier_quantile numeric vector length two three. two numbers used specifies lower (Q1) upper (Q2) quantiles used determining interquantile range (IQR). values 0 1 Q2 > Q1. optional third number can used specify size regular sample taken can useful full dataset large fit memory. Values considered outliers less Q1-(100IQR) greater Q2+(100IQR), IQR=Q2-Q1. wopt list named options writing files writeRaster","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/tgc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate contour geodesic torsion — tgc","title":"Calculate contour geodesic torsion — tgc","text":"Calculate contour geodesic torsion (tg)c, principal representative twisting curvature group based regression coefficients equation Z =ax^2+^2+cxy+dx+ey(+f).","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/tgc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate contour geodesic torsion — tgc","text":"","code":"tgc(a, b, c, d, e)"},{"path":"https://ailich.github.io/MultiscaleDTM/reference/tgc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate contour geodesic torsion — tgc","text":"regression coefficient b regression coefficient c regression coefficient d regression coefficient e regression coefficient","code":""},{"path":"https://ailich.github.io/MultiscaleDTM/reference/tgc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate contour geodesic torsion — tgc","text":"Evans, .S., 1980. integrated system terrain analysis slope mapping. Zeitschrift f¨ur Geomorphologic Suppl-Bd 36, 274–295. Wood, J., 1996. geomorphological characterisation digital elevation models (Ph.D.). University Leicester. Minár, J., Evans, .S., Jenčo, M., 2020. comprehensive system definitions land surface (topographic) curvatures, implications application geoscience modelling prediction. Earth-Science Reviews 211, 103414. https://doi.org/10.1016/j.earscirev.2020.103414","code":""}]
